# - Find Mujin Vision Library
#
# Users can set the following variables before calling the module:
#  MujinVision_DIR - The preferred installation prefix for searching for MujinVision. Set by the user.
#
# MujinVision_ROOT_DIR - the root directory where the installation can be found
# MujinVision_CXX_FLAGS - extra flags for compilation
# MujinVision_LINK_FLAGS - extra flags for linking
# MujinVision_INCLUDE_DIRS - include directories
# MujinVision_LIBRARY_DIRS - link directories
# MujinVision_LIBRARIES - libraries to link plugins with
# MujinVision_Boost_VERSION - the boost version was compiled with

#==================================================================================
# Copyright (C) 2009-2014 Rosen Diankov
#
# Distributed under the OSI-approved BSD License (the "License");
# see accompanying file Copyright.txt for details.
#
# This software is distributed WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the License for more information.
#=============================================================================
# (To distributed this file outside of CMake, substitute the full
#  License text for the above reference.)
#==================================================================================
get_filename_component(_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_PREFIX "${_PREFIX}" PATH)
get_filename_component(_PREFIX "${_PREFIX}" PATH)
get_filename_component(MujinVision_ROOT_DIR "${_PREFIX}" PATH)

if( MSVC )
  # in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix
  if( MSVC70 OR MSVC71 )
    set(MSVC_PREFIX "vc70")
  elseif( MSVC80 )
    set(MSVC_PREFIX "vc80")
  elseif( MSVC90 )
    set(MSVC_PREFIX "vc90")
  else()
    set(MSVC_PREFIX "vc100")
  endif()
  set(MujinVision_LIBRARY_SUFFIX "${MujinVision_VERSION_MAJOR}.${MujinVision_VERSION_MINOR}-${MSVC_PREFIX}-mt" CACHE STRING "the suffix for the mujin vision libraries" FORCE)
else()
  set(MujinVision_LIBRARY_SUFFIX "@MUJINVISION_LIBRARY_SUFFIX@" CACHE STRING "the suffix for the mujin vision libraries" FORCE)
endif()
  
set( MujinVision_CXX_FLAGS "-DMUJINVISION_DLL @MUJINVISION_EXPORT_CXXFLAGS@" )
if( WIN32 )
  set( MujinVision_CXX_FLAGS "${MujinVision_CXX_FLAGS} -DBOOST_ALL_DYN_LINK -DBOOST_ALL_NO_LIB")
endif()
if( MSVC )
  set( MujinVision_CXX_FLAGS "${MujinVision_CXX_FLAGS} /EHc-")
endif()
set( MujinVision_LINK_FLAGS "" )
set( MujinVision_INCLUDE_DIRS "${MujinVision_ROOT_DIR}/include")
set( MujinVision_LIBRARY_DIRS "${MujinVision_ROOT_DIR}/lib@LIB_SUFFIX@")
set( MujinVision_LIBRARIES mujinvision${MujinVision_LIBRARY_SUFFIX})

set( MujinVision_Boost_VERSION "@Boost_MAJOR_VERSION@.@Boost_MINOR_VERSION@")

if( WIN32 )
  # search for the boost version was compiled with
  set(Boost_USE_MULTITHREAD ON)
  set(Boost_USE_STATIC_LIBS OFF)
  set(Boost_USE_STATIC_RUNTIME OFF)
  find_package(Boost ${MujinVision_Boost_VERSION} EXACT COMPONENTS thread date_time)
  if(Boost_VERSION AND NOT "${Boost_VERSION}" STREQUAL "0")
    set( MujinVision_INCLUDE_DIRS "${MujinVision_INCLUDE_DIRS}" ${Boost_INCLUDE_DIRS})
    set( MujinVision_LIBRARY_DIRS "${MujinVision_LIBRARY_DIRS}" ${Boost_LIBRARY_DIRS})
  else(Boost_VERSION AND NOT "${Boost_VERSION}" STREQUAL "0")
    message(WARNING "Failed to find Boost ${MujinVision_Boost_VERSION} necessary MujinVision")
  endif(Boost_VERSION AND NOT "${Boost_VERSION}" STREQUAL "0")
endif( WIN32 )

mark_as_advanced(
  MujinVision_ROOT_DIR
  MujinVision_CXX_FLAGS
  MujinVision_LINK_FLAGS
  MujinVision_INCLUDE_DIRS
  MujinVision_LIBRARY_DIRS
  MujinVision_LIBRARIES
  MujinVision_Boost_VERSION
)
